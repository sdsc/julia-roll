--- julia-0.6.0/Makefile	2017-04-12 14:30:53.000000000 -0700
+++ patch-files/Makefile	2017-04-14 15:25:21.000000000 -0700
@@ -20,21 +20,21 @@
 
 # sort is used to remove potential duplicates
 DIRS := $(sort $(build_bindir) $(build_depsbindir) $(build_libdir) $(build_private_libdir) $(build_libexecdir) $(build_includedir) $(build_includedir)/julia $(build_sysconfdir)/julia $(build_datarootdir)/julia $(build_man1dir))
-ifneq ($(BUILDROOT),$(JULIAHOME))
-BUILDDIRS := $(BUILDROOT) $(addprefix $(BUILDROOT)/,base src ui doc deps test test/perf)
+ifneq ($(JULIABUILDROOT),$(JULIAHOME))
+BUILDDIRS := $(JULIABUILDROOT) $(addprefix $(JULIABUILDROOT)/,base src ui doc deps test test/perf)
 BUILDDIRMAKE := $(addsuffix /Makefile,$(BUILDDIRS))
 DIRS := $(DIRS) $(BUILDDIRS)
 $(BUILDDIRMAKE): | $(BUILDDIRS)
 	@# add Makefiles to the build directories for convenience (pointing back to the source location of each)
 	@echo '# -- This file is automatically generated in julia/Makefile -- #' > $@
-	@echo 'BUILDROOT=$(BUILDROOT)' >> $@
-	@echo 'include $(JULIAHOME)$(patsubst $(BUILDROOT)%,%,$@)' >> $@
+	@echo 'JULIABUILDROOT=$(JULIABUILDROOT)' >> $@
+	@echo 'include $(JULIAHOME)$(patsubst $(JULIABUILDROOT)%,%,$@)' >> $@
 julia-deps: | $(BUILDDIRMAKE)
 configure-y: | $(BUILDDIRMAKE)
 configure:
 ifeq ("$(origin O)", "command line")
-	@if [ "$$(ls '$(BUILDROOT)' 2> /dev/null)" ]; then \
-		echo 'WARNING: configure called on non-empty directory $(BUILDROOT)'; \
+	@if [ "$$(ls '$(JULIABUILDROOT)' 2> /dev/null)" ]; then \
+		echo 'WARNING: configure called on non-empty directory $(JULIABUILDROOT)'; \
 		read -p "Proceed [y/n]? " answer; \
 	else \
 		answer=y;\
@@ -52,10 +52,10 @@
 $(foreach link,base test,$(eval $(call symlink_target,$(link),$(build_datarootdir)/julia)))
 
 julia_flisp.boot.inc.phony: julia-deps
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/src julia_flisp.boot.inc.phony
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/src julia_flisp.boot.inc.phony
 
 # Build the HTML docs (skipped if already exists, notably in tarballs)
-$(BUILDROOT)/doc/_build/html/en/index.html: $(shell find $(BUILDROOT)/base $(BUILDROOT)/doc \( -path $(BUILDROOT)/doc/_build -o -path $(BUILDROOT)/doc/deps -o -name *_constants.jl -o -name *_h.jl \) -prune -o -type f -print)
+$(JULIABUILDROOT)/doc/_build/html/en/index.html: $(shell find $(JULIABUILDROOT)/base $(JULIABUILDROOT)/doc \( -path $(JULIABUILDROOT)/doc/_build -o -path $(JULIABUILDROOT)/doc/deps -o -name *_constants.jl -o -name *_h.jl \) -prune -o -type f -print)
 	@$(MAKE) docs
 
 # doc needs to live under $(build_docdir), not under $(build_datarootdir)/julia/
@@ -73,27 +73,27 @@
 julia-symlink: julia-ui-$(JULIA_BUILD_MODE)
 ifneq ($(OS),WINNT)
 ifndef JULIA_VAGRANT_BUILD
-	@ln -sf "$(shell $(JULIAHOME)/contrib/relative_path.sh "$(BUILDROOT)" "$(JULIA_EXECUTABLE)")" $(BUILDROOT)/julia
+	@ln -sf "$(shell $(JULIAHOME)/contrib/relative_path.sh "$(JULIABUILDROOT)" "$(JULIA_EXECUTABLE)")" $(JULIABUILDROOT)/julia
 endif
 endif
 
 julia-deps: | $(DIRS) $(build_datarootdir)/julia/base $(build_datarootdir)/julia/test
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/deps
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/deps
 
 julia-base: julia-deps $(build_sysconfdir)/julia/juliarc.jl $(build_man1dir)/julia.1 $(build_datarootdir)/julia/julia-config.jl
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/base
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/base
 
 julia-libccalltest: julia-deps
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/src libccalltest
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/src libccalltest
 
 julia-src-release julia-src-debug : julia-src-% : julia-deps julia_flisp.boot.inc.phony
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/src libjulia-$*
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/src libjulia-$*
 
 julia-ui-release julia-ui-debug : julia-ui-% : julia-src-%
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/ui julia-$*
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/ui julia-$*
 
 julia-inference : julia-base julia-ui-$(JULIA_BUILD_MODE) $(build_prefix)/.examples
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT) $(build_private_libdir)/inference.ji JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT) $(build_private_libdir)/inference.ji JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
 
 ifneq ($(CPUID_SPECIFIC_BINARIES), 0)
 CPUID_TAG = _$(call exec,$(JULIA_EXECUTABLE) --cpuid)
@@ -102,17 +102,17 @@
 endif
 
 julia-sysimg-release : julia-inference julia-ui-release
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT) $(build_private_libdir)/sys$(CPUID_TAG).$(SHLIB_EXT) JULIA_BUILD_MODE=release
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT) $(build_private_libdir)/sys$(CPUID_TAG).$(SHLIB_EXT) JULIA_BUILD_MODE=release
 
 julia-sysimg-debug : julia-inference julia-ui-debug
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT) $(build_private_libdir)/sys-debug$(CPUID_TAG).$(SHLIB_EXT) JULIA_BUILD_MODE=debug
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT) $(build_private_libdir)/sys-debug$(CPUID_TAG).$(SHLIB_EXT) JULIA_BUILD_MODE=debug
 
 julia-debug julia-release : julia-% : julia-ui-% julia-sysimg-% julia-symlink julia-libccalltest
 
 debug release : % : julia-%
 
 docs: julia-sysimg-$(JULIA_BUILD_MODE)
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/doc JULIA_EXECUTABLE=$(JULIA_EXECUTABLE_$(JULIA_BUILD_MODE))
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/doc JULIA_EXECUTABLE=$(JULIA_EXECUTABLE_$(JULIA_BUILD_MODE))
 
 check-whitespace:
 ifneq ($(NO_GIT), 1)
@@ -125,9 +125,9 @@
 	@$(JULIA_EXECUTABLE) $(JULIAHOME)/contrib/add_license_to_files.jl #add license headers
 	@#Check documentation
 	@$(JULIA_EXECUTABLE) $(JULIAHOME)/doc/NEWS-update.jl #Add missing cross-references to NEWS.md
-	@$(MAKE) -C $(BUILDROOT)/doc html
-	@$(MAKE) -C $(BUILDROOT)/doc pdf
-	@$(MAKE) -C $(BUILDROOT)/doc check
+	@$(MAKE) -C $(JULIABUILDROOT)/doc html
+	@$(MAKE) -C $(JULIABUILDROOT)/doc pdf
+	@$(MAKE) -C $(JULIABUILDROOT)/doc check
 
 	@# Check to see if the above make invocations changed anything important
 	@if [ -n "$$(git status --porcelain)" ]; then \
@@ -136,7 +136,7 @@
 	fi
 
 	@#Check that benchmarks work
-	@$(MAKE) -C $(BUILDROOT)/test/perf
+	@$(MAKE) -C $(JULIABUILDROOT)/test/perf
 	@#Check that netload tests work
 	@#for test in test/netload/*.jl; do julia $$test; if [ $$? -ne 0 ]; then exit 1; fi; done
 	@echo
@@ -204,14 +204,14 @@
 		base/reduce.jl \
 		base/reflection.jl \
 		base/tuple.jl)
-BASE_SRCS := $(sort $(shell find $(JULIAHOME)/base -name \*.jl) $(shell find $(BUILDROOT)/base -name \*.jl))
+BASE_SRCS := $(sort $(shell find $(JULIAHOME)/base -name \*.jl) $(shell find $(JULIABUILDROOT)/base -name \*.jl))
 
 $(build_private_libdir)/inference.ji: $(CORE_SRCS) | $(build_private_libdir)
 	@$(call PRINT_JULIA, cd $(JULIAHOME)/base && \
 	$(call spawn,$(JULIA_EXECUTABLE)) -C $(JULIA_CPU_TARGET) --output-ji $(call cygpath_w,$@) \
 		--startup-file=no -g0 -O0 coreimg.jl)
 
-RELBUILDROOT := $(shell $(JULIAHOME)/contrib/relative_path.sh "$(JULIAHOME)/base" "$(BUILDROOT)/base/")
+RELBUILDROOT := $(shell $(JULIAHOME)/contrib/relative_path.sh "$(JULIAHOME)/base" "$(JULIABUILDROOT)/base/")
 COMMA:=,
 define sysimg_builder
 $$(build_private_libdir)/sys$1.o: $$(build_private_libdir)/inference.ji $$(JULIAHOME)/VERSION $$(BASE_SRCS)
@@ -328,7 +328,7 @@
 	$(build_depsbindir)/stringreplace $$(strings -t x - $1 | grep '$2' | awk '{print $$1;}') '$3' 255 "$(call cygpath_w,$1)"
 endef
 
-install: $(build_depsbindir)/stringreplace $(BUILDROOT)/doc/_build/html/en/index.html
+install: $(build_depsbindir)/stringreplace $(JULIABUILDROOT)/doc/_build/html/en/index.html
 	@$(MAKE) $(QUIET_MAKE) all
 	@for subdir in $(bindir) $(libexecdir) $(datarootdir)/julia/site/$(VERSDIR) $(docdir) $(man1dir) $(includedir)/julia $(libdir) $(private_libdir) $(sysconfdir); do \
 		mkdir -p $(DESTDIR)$$subdir; \
@@ -377,7 +377,7 @@
 	cp -R -L $(build_datarootdir)/julia $(DESTDIR)$(datarootdir)/
 	# Copy documentation
 	cp -R -L $(build_docdir)/* $(DESTDIR)$(docdir)/
-	cp -R -L $(BUILDROOT)/doc/_build/html $(DESTDIR)$(docdir)/
+	cp -R -L $(JULIABUILDROOT)/doc/_build/html $(DESTDIR)$(docdir)/
 	# Remove perf suite
 	-rm -rf $(DESTDIR)$(datarootdir)/julia/test/perf/
 	# Remove various files which should not be installed
@@ -418,7 +418,7 @@
 	cp -R $(build_sysconfdir)/julia $(DESTDIR)$(sysconfdir)/
 
 distclean dist-clean:
-	-rm -fr $(BUILDROOT)/julia-*.tar.gz $(BUILDROOT)/julia*.exe $(BUILDROOT)/julia-*.7z $(BUILDROOT)/julia-$(JULIA_COMMIT)
+	-rm -fr $(JULIABUILDROOT)/julia-*.tar.gz $(JULIABUILDROOT)/julia*.exe $(JULIABUILDROOT)/julia-*.7z $(JULIABUILDROOT)/julia-$(JULIA_COMMIT)
 
 dist:
 	@echo \'dist\' target is deprecated: use \'binary-dist\' instead.
@@ -438,8 +438,8 @@
 ifneq ($(DESTDIR),)
 	$(error DESTDIR must not be set for make binary-dist)
 endif
-	@$(MAKE) -C $(BUILDROOT) -f $(JULIAHOME)/Makefile install
-	cp $(JULIAHOME)/LICENSE.md $(BUILDROOT)/julia-$(JULIA_COMMIT)
+	@$(MAKE) -C $(JULIABUILDROOT) -f $(JULIAHOME)/Makefile install
+	cp $(JULIAHOME)/LICENSE.md $(JULIABUILDROOT)/julia-$(JULIA_COMMIT)
 ifneq ($(OS), WINNT)
 	-$(CUSTOM_LD_LIBRARY_PATH) PATH=$(PATH):$(build_depsbindir) $(JULIAHOME)/contrib/fixup-libgfortran.sh $(DESTDIR)$(private_libdir)
 endif
@@ -458,30 +458,30 @@
 
 ifeq ($(OS), WINNT)
 	[ ! -d $(JULIAHOME)/dist-extras ] || ( cd $(JULIAHOME)/dist-extras && \
-		cp 7z.exe 7z.dll libexpat-1.dll zlib1.dll libgfortran-3.dll libquadmath-0.dll libstdc++-6.dll libgcc_s_s*-1.dll libssp-0.dll libwinpthread-1.dll $(BUILDROOT)/julia-$(JULIA_COMMIT)/bin )
+		cp 7z.exe 7z.dll libexpat-1.dll zlib1.dll libgfortran-3.dll libquadmath-0.dll libstdc++-6.dll libgcc_s_s*-1.dll libssp-0.dll libwinpthread-1.dll $(JULIABUILDROOT)/julia-$(JULIA_COMMIT)/bin )
 ifeq ($(USE_GPL_LIBS), 1)
 	[ ! -d $(JULIAHOME)/dist-extras ] || ( cd $(JULIAHOME)/dist-extras && \
-		cp busybox.exe $(BUILDROOT)/julia-$(JULIA_COMMIT)/bin )
+		cp busybox.exe $(JULIABUILDROOT)/julia-$(JULIA_COMMIT)/bin )
 endif
-	cd $(BUILDROOT)/julia-$(JULIA_COMMIT)/bin && rm -f llvm* llc.exe lli.exe opt.exe LTO.dll bugpoint.exe macho-dump.exe
+	cd $(JULIABUILDROOT)/julia-$(JULIA_COMMIT)/bin && rm -f llvm* llc.exe lli.exe opt.exe LTO.dll bugpoint.exe macho-dump.exe
 
 	# create file listing for uninstall. note: must have Windows path separators and line endings.
-	cd $(BUILDROOT)/julia-$(JULIA_COMMIT) && find * | sed -e 's/\//\\/g' -e 's/$$/\r/g' > etc/uninstall.log
+	cd $(JULIABUILDROOT)/julia-$(JULIA_COMMIT) && find * | sed -e 's/\//\\/g' -e 's/$$/\r/g' > etc/uninstall.log
 
 	# build nsis package
-	cd $(BUILDROOT) && $(call spawn,$(JULIAHOME)/dist-extras/nsis/makensis.exe) -NOCD -DVersion=$(JULIA_VERSION) -DArch=$(ARCH) -DCommit=$(JULIA_COMMIT) -DMUI_ICON="$(call cygpath_w,$(JULIAHOME)/contrib/windows/julia.ico)" $(call cygpath_w,$(JULIAHOME)/contrib/windows/build-installer.nsi)
+	cd $(JULIABUILDROOT) && $(call spawn,$(JULIAHOME)/dist-extras/nsis/makensis.exe) -NOCD -DVersion=$(JULIA_VERSION) -DArch=$(ARCH) -DCommit=$(JULIA_COMMIT) -DMUI_ICON="$(call cygpath_w,$(JULIAHOME)/contrib/windows/julia.ico)" $(call cygpath_w,$(JULIAHOME)/contrib/windows/build-installer.nsi)
 
 	# compress nsis installer and combine with 7zip self-extracting header
-	cd $(BUILDROOT) && $(JULIAHOME)/dist-extras/7z a -mx9 "julia-install-$(JULIA_COMMIT)-$(ARCH).7z" julia-installer.exe
-	cd $(BUILDROOT) && cat $(JULIAHOME)/contrib/windows/7zS.sfx $(JULIAHOME)/contrib/windows/7zSFX-config.txt "julia-install-$(JULIA_COMMIT)-$(ARCH).7z" > "julia-${JULIA_VERSION}-${ARCH}.exe"
-	-rm -f $(BUILDROOT)/julia-installer.exe
+	cd $(JULIABUILDROOT) && $(JULIAHOME)/dist-extras/7z a -mx9 "julia-install-$(JULIA_COMMIT)-$(ARCH).7z" julia-installer.exe
+	cd $(JULIABUILDROOT) && cat $(JULIAHOME)/contrib/windows/7zS.sfx $(JULIAHOME)/contrib/windows/7zSFX-config.txt "julia-install-$(JULIA_COMMIT)-$(ARCH).7z" > "julia-${JULIA_VERSION}-${ARCH}.exe"
+	-rm -f $(JULIABUILDROOT)/julia-installer.exe
 else
-	cd $(BUILDROOT) && $(TAR) zcvf $(JULIA_BINARYDIST_TARNAME).tar.gz julia-$(JULIA_COMMIT)
+	cd $(JULIABUILDROOT) && $(TAR) zcvf $(JULIA_BINARYDIST_TARNAME).tar.gz julia-$(JULIA_COMMIT)
 endif
-	rm -fr $(BUILDROOT)/julia-$(JULIA_COMMIT)
+	rm -fr $(JULIABUILDROOT)/julia-$(JULIA_COMMIT)
 
-light-source-dist.tmp: $(BUILDROOT)/doc/_build/html/en/index.html
-ifneq ($(BUILDROOT),$(JULIAHOME))
+light-source-dist.tmp: $(JULIABUILDROOT)/doc/_build/html/en/index.html
+ifneq ($(JULIABUILDROOT),$(JULIAHOME))
 	$(error make light-source-dist does not work in out-of-tree builds)
 endif
 	# Save git information
@@ -517,29 +517,29 @@
 	cd ../ && tar -cz --no-recursion -T $$DIRNAME/full-source-dist.tmp1 -f $$DIRNAME/julia-$(JULIA_VERSION)_$(JULIA_COMMIT)-full.tar.gz
 
 clean: | $(CLEAN_TARGETS)
-	@-$(MAKE) -C $(BUILDROOT)/base clean
-	@-$(MAKE) -C $(BUILDROOT)/doc clean
-	@-$(MAKE) -C $(BUILDROOT)/src clean
-	@-$(MAKE) -C $(BUILDROOT)/ui clean
-	@-$(MAKE) -C $(BUILDROOT)/test clean
-	-rm -f $(BUILDROOT)/julia
-	-rm -f $(BUILDROOT)/*.tar.gz
+	@-$(MAKE) -C $(JULIABUILDROOT)/base clean
+	@-$(MAKE) -C $(JULIABUILDROOT)/doc clean
+	@-$(MAKE) -C $(JULIABUILDROOT)/src clean
+	@-$(MAKE) -C $(JULIABUILDROOT)/ui clean
+	@-$(MAKE) -C $(JULIABUILDROOT)/test clean
+	-rm -f $(JULIABUILDROOT)/julia
+	-rm -f $(JULIABUILDROOT)/*.tar.gz
 	-rm -f $(build_depsbindir)/stringreplace \
-	   $(BUILDROOT)/light-source-dist.tmp $(BUILDROOT)/light-source-dist.tmp1 \
-	   $(BUILDROOT)/full-source-dist.tmp $(BUILDROOT)/full-source-dist.tmp1
+	   $(JULIABUILDROOT)/light-source-dist.tmp $(JULIABUILDROOT)/light-source-dist.tmp1 \
+	   $(JULIABUILDROOT)/full-source-dist.tmp $(JULIABUILDROOT)/full-source-dist.tmp1
 	-rm -fr $(build_private_libdir)
 # Teporarily add this line to the Makefile to remove extras
 	-rm -fr $(build_datarootdir)/julia/extras
 	-rm -f $(build_prefix)/.examples
 
 cleanall: clean
-	@-$(MAKE) -C $(BUILDROOT)/src clean-flisp clean-support
-	@-$(MAKE) -C $(BUILDROOT)/deps clean-libuv
+	@-$(MAKE) -C $(JULIABUILDROOT)/src clean-flisp clean-support
+	@-$(MAKE) -C $(JULIABUILDROOT)/deps clean-libuv
 	-rm -fr $(build_prefix) $(build_staging)
 
 distcleanall: cleanall
-	@-$(MAKE) -C $(BUILDROOT)/deps distcleanall
-	@-$(MAKE) -C $(BUILDROOT)/doc cleanall
+	@-$(MAKE) -C $(JULIABUILDROOT)/deps distcleanall
+	@-$(MAKE) -C $(JULIABUILDROOT)/doc cleanall
 
 .PHONY: default debug release check-whitespace release-candidate \
 	julia-debug julia-release julia-deps \
@@ -551,7 +551,7 @@
 	dist full-source-dist source-dist
 
 test: check-whitespace $(JULIA_BUILD_MODE)
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/test default JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/test default JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
 
 ifeq ($(JULIA_BUILD_MODE),release)
 JULIA_SYSIMG=$(build_private_libdir)/sys$(JULIA_LIBSUFFIX).$(SHLIB_EXT)
@@ -559,20 +559,20 @@
 JULIA_SYSIMG=$(build_private_libdir)/sys-$(JULIA_BUILD_MODE)$(JULIA_LIBSUFFIX).$(SHLIB_EXT)
 endif
 testall: check-whitespace $(JULIA_BUILD_MODE)
-	cp $(JULIA_SYSIMG) $(BUILDROOT)/local.$(SHLIB_EXT) && $(JULIA_EXECUTABLE) -J $(call cygpath_w,$(BUILDROOT)/local.$(SHLIB_EXT)) -e 'true' && rm $(BUILDROOT)/local.$(SHLIB_EXT)
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/test all JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
+	cp $(JULIA_SYSIMG) $(JULIABUILDROOT)/local.$(SHLIB_EXT) && $(JULIA_EXECUTABLE) -J $(call cygpath_w,$(JULIABUILDROOT)/local.$(SHLIB_EXT)) -e 'true' && rm $(JULIABUILDROOT)/local.$(SHLIB_EXT)
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/test all JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
 
 testall1: check-whitespace $(JULIA_BUILD_MODE)
-	@env JULIA_CPU_CORES=1 $(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/test all JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
+	@env JULIA_CPU_CORES=1 $(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/test all JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
 
 test-%: check-whitespace $(JULIA_BUILD_MODE)
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/test $* JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/test $* JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
 
 perf: release
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/test/perf JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/test/perf JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
 
 perf-%: release
-	@$(MAKE) $(QUIET_MAKE) -C $(BUILDROOT)/test/perf $* JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
+	@$(MAKE) $(QUIET_MAKE) -C $(JULIABUILDROOT)/test/perf $* JULIA_BUILD_MODE=$(JULIA_BUILD_MODE)
 
 # download target for some hardcoded windows dependencies
 .PHONY: win-extras wine_path
